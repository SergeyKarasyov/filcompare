language: cpp
dist: bionic

addons:
  apt:
    sources: 
      - ubuntu-toolchain-r-test
    packages:
      - g++-7
      - libacl1-dev
      - libcap-dev
      - libsqlite3-dev
      - zlib1g-dev
      - lcov
  coverity_scan:
    project:
      name: "filcompare"
      description: "Build submitted via Travis CI"
    build_command_prepend: "cmake -D ENABLE_COVERAGE:BOOL=TRUE -D CMAKE_EXPORT_COMPILE_COMMANDS=ON -D CMAKE_BUILD_TYPE:STRING=Debug . "
    build_command:   "cmake --build . -- -j2"
    branch_pattern: coverity_scan
      
matrix:
  include:
    - os: linux
      compiler: gcc
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
        - GCC_VER="7" CPPCHECK=1 COVERAGE=1 CMAKE_OPTIONS="-D RUN_FUZZY_TESTS:BOOL=TRUE"
    - os: linux
      compiler: clang
      env:
        - CMAKE_OPTIONS="-D DYNLOAD_ENABLED:BOOL=FALSE -D MULTITHREAD_SUPPORT_ENABLED:BOOL=FALSE -D CMAKE_EXPORT_COMPILE_COMMANDS=ON -D USE_STD_MAKE_SHARED:BOOL=TRUE" BUILD_ONLY=1
  
before_install:
  - if [ "${GCC_VER}" != "" ]; then export CXX="g++-$GCC_VER" CC="gcc-$GCC_VER" GCOV="gcov-$GCC_VER" ; fi
  - pip install --user cpp-coveralls coverage

script: 
  - cmake -D ENABLE_COVERAGE:BOOL=TRUE -D CMAKE_BUILD_TYPE:STRING=Debug $CMAKE_OPTIONS . 
  - cmake --build . -- -j2
  - if [ "${BUILD_ONLY}" != "1" ]; then ctest; fi
  - if [ "${COVERAGE}" = "1" ]; then bash <(curl -s https://codecov.io/bash) -x $GCOV -a "-s `pwd`" ; fi


  after_success:
    # Create lcov report
    - lcov --capture --directory . --output-file coverage.info
    - lcov --remove coverage.info '/usr/*' --output-file coverage.info # filter system-files
    - lcov --list coverage.info # debug info
    # Uploading report to CodeCov
    - bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"